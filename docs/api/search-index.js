var searchIndex = new Map(JSON.parse('[["lingora",{"t":"PFGFPPPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AnalysisFailed","App","AppError","Arguments","Gui","IntegrityErrorsDetected","InternalIssue","InvalidArguments","OutputFailed","OutputMode","Silent","Standard","augment_args","augment_args_for_update","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","command","command_for_update","config","dioxus_i18n","exit_status","fmt","","","","from","","","","from_arg_matches","from_arg_matches_mut","group_id","initialize_from_function","","","","into","","","","output_analysis","output_dioxus_i18n","output_mode","reference","root","show_gui","spawn","","","","super_from","","","","super_into","","","","targets","to_owned","to_possible_value","to_string","try_from","","","","","try_from_arguments","try_into","","","","type_id","","","","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","","",""],"q":[[0,"lingora"],[92,"clap_builder::builder::command"],[93,"lingora::config::arguments"],[94,"std::path"],[95,"core::option"],[96,"lingora::app"],[97,"core::result"],[98,"core::fmt"],[99,"clap_builder::parser::matches::arg_matches"],[100,"clap_builder"],[101,"clap_builder::util::id"],[102,"std::io"],[103,"core::cell"],[104,"alloc::rc"],[105,"alloc::vec"],[106,"clap_builder::builder::possible_value"],[107,"alloc::string"],[108,"core::any"]],"i":"Af```h1111`00n0Ad32103212221111033210321111032103210011100321032103211223003210032103211120321","f":"````````````{bb}0{d{{d{c}}}{}}000{{{d{f}}}{{d{fc}}}{}}000{{{d{h}}}h}{{d{d{fc}}}j{}}{{dl}j}{{}b}0{{{d{n}}}{{Ab{{d{A`}}}}}}0{{{d{Ad}}}{{Ah{jAf}}}}{{{d{Af}}{d{fAj}}}Al}0{{{d{h}}{d{fAj}}}Al}{{{d{n}}{d{fAj}}}Al}{cc{}}000{{{d{An}}}{{Ah{nB`}}}}{{{d{fAn}}}{{Ah{nB`}}}}{{}{{Ab{Bb}}}}{{{Bf{}{{Bd{c}}}}}c{}}000{{}c{}}000{{{d{Ad}}{Bl{{Bj{Bh}}}}}{{Ah{jAf}}}}{{{d{Ad}}{d{A`}}}{{Ah{jAf}}}}{{{d{n}}}h}=={{{d{Ad}}}j}{{}c{}}000{ce{}{}}000{{}c{}}000{{{d{n}}}{{Bn{{d{A`}}}}}}{dc{}}{{{d{h}}}{{Ab{C`}}}}{dCb}{c{{Ah{e}}}{}{}}{{{d{n}}}{{Ah{Adc}}}{}}111`{{}{{Ah{c}}}{}}000{dCd}000{{{d{fn}}{d{An}}}{{Ah{jB`}}}}{{{d{fn}}{d{fAn}}}{{Ah{jB`}}}}{{}{{d{{Cf{h}}}}}}{{}c{}}000","D":"Ah","p":[[5,"Command",92],[1,"reference",null,null,1],[0,"mut"],[6,"OutputMode",0,93],[1,"unit"],[1,"u8"],[5,"Arguments",0,93],[5,"PathBuf",94],[6,"Option",95,null,1],[5,"App",0,96],[6,"AppError",0,96],[6,"Result",97,null,1],[5,"Formatter",98],[8,"Result",98],[5,"ArgMatches",99],[8,"Error",100],[5,"Id",101],[17,"Output"],[1,"fn"],[10,"Write",102],[5,"RefCell",103],[5,"Rc",104,null,1],[5,"Vec",105],[5,"PossibleValue",106],[5,"String",107],[5,"TypeId",108],[1,"slice"]],"r":[[0,96],[1,96],[2,96],[3,93],[4,93],[5,96],[6,96],[7,96],[8,96],[9,93],[10,93],[11,93],[12,93],[13,93],[14,96],[15,96],[16,93],[17,93],[18,96],[19,96],[20,93],[21,93],[22,93],[23,93],[24,93],[25,93],[26,93],[27,93],[28,93],[29,96],[30,96],[31,96],[32,93],[33,93],[34,96],[35,96],[36,93],[37,93],[38,93],[39,93],[40,93],[41,96],[42,96],[43,93],[44,93],[45,96],[46,96],[47,93],[48,93],[49,96],[50,96],[51,93],[52,93],[53,93],[54,96],[55,96],[56,96],[57,93],[58,93],[59,96],[60,96],[61,93],[62,93],[63,96],[64,96],[65,93],[66,93],[67,93],[68,93],[69,93],[70,96],[71,96],[72,96],[73,96],[74,93],[75,93],[76,96],[77,96],[78,96],[79,93],[80,93],[81,96],[82,96],[83,93],[84,93],[85,93],[86,93],[87,93],[88,96],[89,96],[90,93],[91,93]],"b":[[30,"impl-Display-for-AppError"],[31,"impl-Debug-for-AppError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFAABQABAAMABgAEAA0AFQAnAAYAMgAqAA==","P":[[14,"T"],[22,""],[23,"T"],[24,""],[34,"T"],[38,""],[41,"T"],[45,"U"],[49,""],[55,"Ret"],[59,"T,O"],[63,"O"],[67,""],[68,"T"],[69,""],[71,"U,T"],[72,"TryFrom::Error"],[73,"U,T"],[76,""],[77,"U"],[81,""],[88,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3734]}